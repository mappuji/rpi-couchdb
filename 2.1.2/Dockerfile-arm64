# Licensed under the Apache License, Version 2.1 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

#We will be building  64-bit after 32-bit. So we can use this as builder.
FROM treehouses/rpi-couchdb:2.1.2 as builder

FROM resin/aarch64-debian
LABEL maintainer="sahil@ole.org,mappuji@ole.org"

# Add CouchDB user account
RUN groupadd -r couchdb && useradd -d /opt/couchdb -g couchdb couchdb

RUN dpkg --add-architecture armhf \
    && apt-get update -y && apt-get install -y --no-install-recommends \
    ca-certificates \
    ca-certificates:armhf \
    curl:armhf \
    #erlang-nox: dummy packages dont support different architecture install. Hence install all separately.
    erlang-base:armhf erlang-asn1:armhf erlang-corba:armhf erlang-crypto:armhf erlang-diameter:armhf erlang-edoc:armhf erlang-eldap:armhf erlang-erl-docgen:armhf erlang-eunit:armhf erlang-ic:armhf erlang-inets:armhf erlang-mnesia:armhf erlang-odbc:armhf erlang-os-mon:armhf erlang-parsetools:armhf erlang-percept:armhf erlang-public-key:armhf erlang-runtime-tools:armhf erlang-snmp:armhf erlang-ssh:armhf erlang-ssl:armhf erlang-syntax-tools:armhf erlang-tools:armhf erlang-webtool:armhf erlang-xmerl:armhf \
    erlang-reltool:armhf \
    haproxy:armhf \
    libicu52:armhf \
    libmozjs185-1.0:armhf \
    openssl \
  && rm -rf /var/lib/apt/lists/*

# grab gosu for easy step-down from root and tini for signal handling
# see https://github.com/apache/couchdb-docker/pull/28#discussion_r141112407
ENV GOSU_VERSION 1.10
ENV TINI_VERSION 0.16.1
RUN set -ex; \
	\
	apt-get update; \
	apt-get install -y --no-install-recommends wget; \
	rm -rf /var/lib/apt/lists/*; \
	\
	dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
	\
# install gosu
	wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$dpkgArch"; \
	wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
	gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
	rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc; \
	chmod +x /usr/local/bin/gosu; \
	\
# check if tini exists
        if ! type "tini" > /dev/null; then \
        \
# if not then install tini
	wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-$dpkgArch"; \
	wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-$dpkgArch.asc"; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; \
	gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini; \
	rm -r "$GNUPGHOME" /usr/local/bin/tini.asc; \
	chmod +x /usr/local/bin/tini; \
	tini --version; \
	\
	fi; \
	apt-get purge -y --auto-remove wget


RUN  mkdir -p /opt/couchdb
#Copy pre-compiled couchdb From builder 
#This is to be done as CouchDB doesn't compile on arm64
COPY --from=builder /opt/couchdb /opt/couchdb


# Add configuration
COPY local.ini /opt/couchdb/etc/local.d/
COPY vm.args /opt/couchdb/etc/

COPY ./docker-entrypoint.sh /

# Setup directories and permissions
RUN chown -R couchdb:couchdb /opt/couchdb

WORKDIR /opt/couchdb
EXPOSE 5984 4369 9100
VOLUME ["/opt/couchdb/data"]

ENTRYPOINT ["tini", "--", "/docker-entrypoint.sh"]
CMD ["/opt/couchdb/bin/couchdb"]
